<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>佛性前端</title>
  
  <subtitle>你们最喜欢的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-21T15:18:05.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小bbbbbb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端性能衡量指标</title>
    <link href="http://yoursite.com/2018/03/21/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E8%A1%A1%E9%87%8F%E6%8C%87%E6%A0%87/"/>
    <id>http://yoursite.com/2018/03/21/前端性能衡量指标/</id>
    <published>2018-03-21T15:11:07.000Z</published>
    <updated>2018-03-21T15:18:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍前端性能衡量指标，对于一个网站如果希望抓住用户，网站的速度以及稳定性是非常重要的。</p><a id="more"></a><h2 id="性能衡量指标"><a href="#性能衡量指标" class="headerlink" title="性能衡量指标"></a>性能衡量指标</h2><p><strong>指标：</strong></p><ul><li>白屏时间</li><li>首屏时间</li><li>用户可交互时间</li><li>完全加载时间</li><li>首字节时间</li><li>DNS 解析时间</li><li>TCP 连接时间</li><li>HTTP 请求时间</li><li>HTTP 响应时间</li></ul><p><strong>维度：</strong></p><ul><li>运营商</li><li>网络</li><li>URL</li></ul><h2 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h2><p><strong>如何监控</strong></p><ul><li><a href="https://link.juejin.im/?target=http%3A%2F%2Ffex.baidu.com%2Fblog%2F2014%2F05%2Fbuild-performance-monitor-in-7-days%2F" target="_blank" rel="noopener">7 天打造前端性能监控系统</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fweb.jobbole.com%2F84264%2F" target="_blank" rel="noopener">使用性能API快速分析web前端性能</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F37585246" target="_blank" rel="noopener">你是如何搭建 Web 前端性能监控系统的</a></li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><p><strong>优化点：</strong></p><ul><li>高频事件消抖、节流。使用<em>.debounce()和</em>. throttle()，控制高频事件的操作，如：scroll、onChange<ul><li>_.debounce()的多次连续的调用，最终实际上只会调用一次；</li><li>_. throttle()将频繁调用的函数限定在一个给定的调用频率内。</li></ul></li><li>JavaScritp很快，但是DOM很慢，减少修改DOM。<ul><li>DOM的渲染需要计算DOM+CSSOM，每次DOM和CSSOM的每次修改都会触发重绘；<ul><li>渲染过程：JavaScript -&gt; Style -&gt; Layoout -&gt; Paint -&gt; Composite</li></ul></li><li>避免 position: fixed;布局，Z轴图层堆叠关系会改变，引起重绘；</li><li>图层隔离：将那些会变动的元素提升至单独的图层，比如：动画、渐变；</li><li>降低图层复杂度；</li><li>避免线程阻塞；</li><li>优化CSS；</li><li>文件：引入方式、位置、文件合并、延迟加载；</li><li>硬件加速：GPU加速渲染</li></ul></li></ul><p><strong>基于各环节优化：</strong><br><img src="https://upload-images.jianshu.io/upload_images/1726248-530cd1c4fe65d9e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="优化流程"></p><ul><li>减少http请求，合理设置 HTTP缓存</li><li>使用HTTP/2</li><li>持久连接，使用 keep-alive 或者 WebSocket</li><li>使用浏览器缓存</li><li>启用压缩</li><li>CSS Sprites</li><li>LazyLoad Images</li><li>样式文件放在顶部，脚本文件放在底部</li><li>减少 cookie 传输</li><li>CDN 加速<ul><li>CDN（contentdistribute network，内容分发网络）的本质仍然是一个缓存，而且将数据缓存在离用户最近的地方，使用户以最快速度获取数据，即所谓网络访问第一跳。</li></ul></li><li>反向代理<ul><li>传统代理服务器位于浏览器一侧，代理浏览器将http请求发送到互联网上，而反向代理服务器位于网站机房一侧，代理网站web服务器接收http请求。</li><li>论坛网站，把热门词条、帖子、博客缓存在反向代理服务器上加速用户访问速度，当这些动态内容有变化时，通过内部通知机制通知反向代理缓存失效，反向代理会重新加载最新的动态内容再次缓存起来。</li><li>此外，反向代理也可以实现负载均衡的功能，而通过负载均衡构建的应用集群可以提高系统总体处理能力，进而改善网站高并发情况下的性能。</li></ul></li><li>面向未来，考虑 service worker</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍前端性能衡量指标，对于一个网站如果希望抓住用户，网站的速度以及稳定性是非常重要的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="前端优化" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署到github</title>
    <link href="http://yoursite.com/2018/03/21/hexo%E9%83%A8%E7%BD%B2%E5%88%B0github/"/>
    <id>http://yoursite.com/2018/03/21/hexo部署到github/</id>
    <published>2018-03-21T07:58:43.000Z</published>
    <updated>2018-03-21T08:07:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何成功搭建hexo本地博客并部署到github上。</p><a id="more"></a><h3 id="一、首先搭建-hexo-本地博客"><a href="#一、首先搭建-hexo-本地博客" class="headerlink" title="一、首先搭建 hexo 本地博客"></a>一、首先搭建 hexo 本地博客</h3><p>1、git和Node.js都安装成功后，安装hexo，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo -g</span><br></pre></td></tr></table></figure></p><p>2、创建 my- hexo 文件夹，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir my-hexo</span><br></pre></td></tr></table></figure></p><p>3、my- hexo 安装成功后，在该文件夹下执行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>4、启动本地服务，现在已经搭建起本地的 hexo 博客了，执行以下命令，然后到浏览器输入 <code>localhost:4000</code> 查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate 或 hexo g    // 生成静态文件</span><br><span class="line">hexo server 或 hexo s        // 启动服务器。默认情况下，访问网址为： http://localhost:4000/</span><br></pre></td></tr></table></figure></p><p>5、到此，本地博客已经搭建起来了，如下图（这是添加了文章，换了主题的博客）<br><img src="https://upload-images.jianshu.io/upload_images/1726248-7e71fb085f79722c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的博客"></p><h3 id="二、将-hexo-本地博客部署到github上"><a href="#二、将-hexo-本地博客部署到github上" class="headerlink" title="二、将 hexo 本地博客部署到github上"></a>二、将 hexo 本地博客部署到github上</h3><p>1、创建repository<br>这里的 repository 名必须使用你的github的用户，即我的用户名为 <code>frontend</code> ，那么网址必须为 <code>frontendX.github.io</code> ，如下图（创建repository）中红色框。<br><img src="https://upload-images.jianshu.io/upload_images/1726248-f1b9512f1b4e8e15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建repository"></p><p>2、部署<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 编辑 _config.yml ，在部署时，要把下面的 zippera 都换成你的账号名。</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: https://github.com/frontendX/frontendX.git</span><br><span class="line">    branch: master</span><br><span class="line"></span><br><span class="line"> // 执行下列指令即可完成部署。</span><br><span class="line"></span><br><span class="line"> hexo g</span><br><span class="line"> hexo d</span><br><span class="line"></span><br><span class="line"> 如果提示：ERROR Deployer not found: git</span><br><span class="line"> 执行以下以下命令：npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"> 完成之后再执行：</span><br><span class="line">    hexo generate</span><br><span class="line">    hexo deploy</span><br></pre></td></tr></table></figure></p><p> <strong>记住：每次修改本地文件后，需要 <code>hexo g</code> 才能保存，<code>hexo d</code> 才能部署到github。每次使用命令时，都要在该项目目录下。</strong></p><p><em>注意：部署中遇到的问题</em></p><p>当 <code>repository</code> 名是 <code>froentendX</code>（修改前 - 1）的时候，<a href="https://frontendx.github.io/" target="_blank" rel="noopener">https://frontendx.github.io/</a> 页面访问不了；需要把 <code>froentendX</code> 修改成 <code>frontendX.github.io</code>（修改后 - 2）<br><img src="https://upload-images.jianshu.io/upload_images/1726248-a80dab99d98acc8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改前 - 1"></p><p><img src="https://upload-images.jianshu.io/upload_images/1726248-a3e865480fa01273.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改后 - 2"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何成功搭建hexo本地博客并部署到github上。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>ES6：export default 和 export 区别</title>
    <link href="http://yoursite.com/2018/03/21/ES6%EF%BC%9Aexport-default-%E5%92%8C-export-%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2018/03/21/ES6：export-default-和-export-区别/</id>
    <published>2018-03-21T01:55:47.000Z</published>
    <updated>2018-03-21T12:29:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文通过主要介绍export default 和 export 的区别。</p><a id="more"></a><h2 id="export-default-和-export-区别："><a href="#export-default-和-export-区别：" class="headerlink" title="export default 和 export 区别："></a>export default 和 export 区别：</h2><p>1.export与export default均可用于导出常量、函数、文件、模块等<br>2.你可以在其它文件或模块中通过import+(常量 | 函数 | 文件 | 模块)名的方式，将其导入，以便能够对其进行使用<br>3.在一个文件或模块中，export、import可以有多个，export default仅有一个<br>4.通过export方式导出，在导入时要加{ }，export default则不需要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.export</span><br><span class="line">//a.js</span><br><span class="line">export const str = &quot;blablabla~&quot;;</span><br><span class="line">export function log(sth) &#123;</span><br><span class="line">  return sth;</span><br><span class="line">&#125;</span><br><span class="line">对应的导入方式：</span><br><span class="line"></span><br><span class="line">//b.js</span><br><span class="line">import &#123; str, log &#125; from &apos;a&apos;; //也可以分开写两次，导入的时候带花括号</span><br><span class="line"></span><br><span class="line">2.export default</span><br><span class="line">//a.js</span><br><span class="line">const str = &quot;blablabla~&quot;;</span><br><span class="line">export default str;</span><br><span class="line">对应的导入方式：</span><br><span class="line"></span><br><span class="line">//b.js</span><br><span class="line">import str from &apos;a&apos;; //导入的时候没有花括号</span><br></pre></td></tr></table></figure><h2 id="使用export-default命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名"><a href="#使用export-default命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名" class="headerlink" title="使用export default命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名"></a>使用export default命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//a.js</span><br><span class="line">let sex = &quot;boy&quot;;</span><br><span class="line">export default sex（sex不能加大括号）</span><br><span class="line">//原本直接export sex外部是无法识别的，加上default就可以了.但是一个文件内最多只能有一个export default。</span><br><span class="line">其实此处相当于为sex变量值&quot;boy&quot;起了一个系统默认的变量名default，自然default只能有一个值，所以一个文件内不能有多个export default。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// b.js</span><br><span class="line">本质上，a.js文件的export default输出一个叫做default的变量，然后系统允许你为它取任意名字。所以可以为import的模块起任何变量名，且不需要用大括号包含</span><br><span class="line">import any from &quot;./a.js&quot;</span><br><span class="line">import any12 from &quot;./a.js&quot;</span><br><span class="line">console.log(any,any12)   // boy,boy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文通过主要介绍export default 和 export 的区别。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/19/hello-world/"/>
    <id>http://yoursite.com/2018/03/19/hello-world/</id>
    <published>2018-03-19T01:55:47.000Z</published>
    <updated>2018-03-21T12:29:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post2"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
